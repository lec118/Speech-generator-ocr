name: Preview Deployment

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    # Only run preview for PRs targeting main branch
    if: github.event.pull_request.base.ref == 'main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm -C apps/web build
        env:
          # Use mock API key for preview builds
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY_PREVIEW || 'sk-preview-mock-key' }}
          DAILY_PAGE_LIMIT: 200
          CONCURRENCY_HINT: 10

      - name: Deploy to Vercel (Preview)
        id: vercel-deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./apps/web
          scope: ${{ secrets.VERCEL_ORG_ID }}
        if: secrets.VERCEL_TOKEN != ''

      - name: Comment preview URL on PR
        uses: actions/github-script@v7
        if: steps.vercel-deploy.outputs.preview-url != ''
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const previewUrl = '${{ steps.vercel-deploy.outputs.preview-url }}';
            const prNumber = context.payload.pull_request.number;
            const body = `## üöÄ Preview Deployment

            Your preview deployment is ready!

            **Preview URL**: ${previewUrl}

            ### üìã Preview Details
            - **Environment**: Preview
            - **Branch**: \`${{ github.head_ref }}\`
            - **Commit**: \`${{ github.sha }}\`
            - **Build**: [\#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ### üß™ Testing Checklist
            - [ ] PDF ÏóÖÎ°úÎìú Í∏∞Îä• ÌôïÏù∏
            - [ ] Í∏∏Ïù¥/ÌÜ§ ÏòµÏÖò ÏÑ†ÌÉù ÌôïÏù∏
            - [ ] ÌôîÎ≤ï ÏÉùÏÑ± ÎèôÏûë ÌôïÏù∏
            - [ ] Í≤∞Í≥º Îã§Ïö¥Î°úÎìú ÌôïÏù∏
            - [ ] ÌÜ†ÌÅ∞/ÎπÑÏö© ÌëúÏãú ÌôïÏù∏

            ### ‚ö†Ô∏è Preview Limitations
            - Mock OpenAI API key (Ïã§Ï†ú ÏÉùÏÑ± Ï†úÌïúÏ†Å)
            - DAILY_PAGE_LIMIT: 200
            - CONCURRENCY_HINT: 10

            ---
            ü§ñ Deployed via GitHub Actions`;

            // Find existing preview comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('üöÄ Preview Deployment')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body,
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: body,
              });
            }

      - name: Comment manual preview instructions
        uses: actions/github-script@v7
        if: secrets.VERCEL_TOKEN == ''
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const body = `## üì¶ Preview Build Ready

            Your preview build is ready, but Vercel deployment is not configured.

            ### üîß Manual Preview Deployment

            **Local Testing:**
            \`\`\`bash
            git checkout ${{ github.head_ref }}
            pnpm install
            pnpm -C apps/web build
            pnpm -C apps/web start
            \`\`\`

            **Vercel CLI (if configured):**
            \`\`\`bash
            cd apps/web
            vercel
            \`\`\`

            ### üîê Required Secrets
            To enable automatic preview deployments, add these secrets:
            - \`VERCEL_TOKEN\`
            - \`VERCEL_ORG_ID\`
            - \`VERCEL_PROJECT_ID\`
            - \`OPENAI_API_KEY_PREVIEW\` (optional)

            ---
            ü§ñ Build completed via GitHub Actions`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: body,
            });
