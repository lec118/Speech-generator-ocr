import type { LengthOption, ToneOption, DeliveryStyleOption } from "./types";
import { LENGTH_LABELS, TONE_LABELS, DELIVERY_LABELS } from "./types";

export const DEFAULT_STYLE_PROMPT = "{STYLE_PROMPT}";
export const STYLE_PROMPT_VERSION = "v3-vision-topdown";

export interface BuildPromptInput {
  topic?: string;
  pageIndex: number;
  pageText?: string;
  length?: LengthOption;
  tone?: ToneOption;
  delivery?: DeliveryStyleOption;
}

const LENGTH_GUIDANCE: Record<LengthOption, string> = {
  short: "약 300~400자, 핵심만 빠르게 요약",
  standard: "약 500~700자, 표준 분량으로 핵심과 구조를 모두 전달",
  long: "약 700~800자, 사례·비교 정보를 충분히 포함"
};

const TONE_GUIDANCE: Record<ToneOption, string> = {
  friendly: "상담형(친근) 톤 – 공감과 안내 중심",
  advertisement: "광고형 톤 – 혜택과 CTA를 명확히 강조",
  warStyle: "워스타일 톤 – 짧고 강렬한 메시지, 키워드 반복"
};

const DELIVERY_GUIDANCE: Record<DeliveryStyleOption, string> = {
  empathy: "공감형 화법 – 고객 상황을 인정하고 공감 문구 활용",
  friendly: "친근형 화법 – 일상적인 어휘와 부드러운 리듬",
  expert: "전문가형 화법 – 객관적 근거와 신뢰감 있는 전달"
};

const MAX_SOURCE_CHARS = 6000;

function summarizeOptions({
  tone,
  delivery,
  length
}: {
  tone: ToneOption;
  delivery: DeliveryStyleOption;
  length: LengthOption;
}): string {
  return `tone=${TONE_LABELS[tone]}, delivery=${DELIVERY_LABELS[delivery]}, length=${LENGTH_LABELS[length]}`;
}

export function buildPrompt({
  topic,
  pageIndex,
  pageText,
  length = "standard",
  tone = "friendly",
  delivery = "empathy"
}: BuildPromptInput): string {
  const normalizedTopic = topic?.trim() || "한화생명 상품";
  const rawText = typeof pageText === "string" ? pageText.trim() : "";
  const normalizedText = rawText.slice(0, MAX_SOURCE_CHARS);
  const trimmedText = normalizedText || "[첨부된 페이지 이미지를 직접 읽고 핵심 정보를 파악하세요.]";

  const formattedPageIndex = `[p.${pageIndex + 1}]`;
  const optionSummary = summarizeOptions({ tone, delivery, length });

  const sections: string[] = [
    "# 🧩 한화생명 상품 이미지 기반 TTS 화법 생성 프롬프트",
    "",
    "다음에 제공되는 **보험 상품 이미지/자료(그림 파일)** 를 기반으로,",
    "실제 상담에서 바로 읽을 수 있는 **TTS 최적화 화법 대본**을 작성하세요.",
    "",
    `- 분석 대상 페이지: ${formattedPageIndex}`,
    `- 상품 키워드: ${normalizedTopic}`,
    "",
    "---",
    "",
    "## ⚠️ 중요: 정확성 최우선",
    "- **오타 절대 금지**: 이미지의 모든 텍스트(특히 의료/전문 용어, 상품명, 수치)를 **정확하게** 읽어주세요.",
    "  - 예: '고막성형술'을 '고마성형술'로 잘못 읽지 않기",
    "  - 예: '치료비'를 '치료미'로 잘못 읽지 않기",
    "- **숫자와 단위**: 금액, 비율, 날짜 등은 이미지에 표시된 그대로 정확히 전달하세요.",
    "- **전문 용어**: 의료 용어, 보험 용어 등은 이미지 원문을 두 번 확인하여 정확하게 작성하세요.",
    "- **불확실하면**: 원문 그대로 사용하는 것이 최선입니다.",
    "",
    "---",
    "",
    "## 🎛 고정 생성 옵션",
    `- **tone:** ${TONE_LABELS[tone]} (${TONE_GUIDANCE[tone]})`,
    `- **delivery:** ${DELIVERY_LABELS[delivery]} (${DELIVERY_GUIDANCE[delivery]})`,
    `- **length:** ${LENGTH_LABELS[length]} (${LENGTH_GUIDANCE[length]})`,
    "- **ssml:** 사용하지 않음 (break time 등 SSML 태그 생성 금지)",
    "",
    `> 현재 옵션: ${optionSummary}`,
    "",
    "---",
    "",
    "## 🧭 구성 원칙",
    "- **Top-Down 생성:** 이미지의 시각적 흐름을 **상→하, 좌→우** 순서로 따라가며 서술합니다.",
    "- **섹션 구조화:** 주요 섹션은 **'먼저', '다음은', '마지막으로'** 같은 연결어로 명확히 구분합니다.",
    "  - 예: \"먼저, **난임 보장**이에요.\", \"다음은 **수술 보장**입니다.\", \"마지막으로 **암 보장**입니다.\"",
    "- **핵심만 압축:** 세부 숫자나 표의 모든 행은 생략하고, 대표값과 핵심 보장 내용만 전달합니다.",
    "- **다열 레이아웃:** 카드/다단 구조는 **좌측부터 우측** 순서로 설명합니다.",
    "- **통합 스토리:** 여러 페이지가 있어도 **하나의 흐름**으로 통합하여 전달합니다.",
    "- **리스트 변환:** 불릿 포인트는 자연스러운 문장으로 연결합니다.",
    "",
    "---",
    "",
    "## 🗣 톤 & 스타일 가이드",
    "- 존칭 일관 (\"안녕하세요 고객님\", \"말씀드릴게요\" 등).",
    "- **어미는 '-이에요/-예요', '-습니다/-입니다', '~하지요' 등을 자연스럽게 섞어** 리듬감을 줍니다.",
    "  - 예: \"먼저, **난임 보장**이에요.\", \"다음은 **수술 보장**입니다.\", \"포함돼요.\", \"보장됩니다.\"",
    "- **한 문장에 하나의 정보만:** 짧고 명료한 문장으로 끊어서 전달합니다.",
    "- **판매 압박 금지:** '준비', '선택', '대비', '확인', '포함' 중심으로 안내합니다.",
    "- **환급률 표현:** 10년 후, 20년 후 두 시점만 언급합니다 (15년 제외). '수익률'이라는 용어는 사용하지 말고 반드시 '환급률'을 사용하세요.",
    "- **비교·최상급:** 이미지에 명시된 정보에만 근거합니다.",
    "- **표기 규칙:** '3만 1천 원대', '약 3만 6천 원대', '1억 원' 같이 대략적인 범위로 표현합니다.",
    "- **상품명/특약명:** 이미지 표기 그대로 사용합니다.",
    "- **법규 준수:** 확정수익·과장표현은 금지합니다.",
    "",
    "---",
    "",
    "## 📊 표/숫자 데이터 처리 원칙",
    "- **표는 요약하여 전달:** 가입금액, 특약별 보험료 등 세부 숫자는 생략하고 대표값만 언급합니다.",
    "  - ❌ 나쁜 예: \"남성 난임 보장 10년 갱신형은 100만 원에 30세 남자 1천890원, 40세 남자 670원\"",
    "  - ✅ 좋은 예: \"30세 남성 기준, 월 보험료는 약 3만 1천 원대, 40세 남성은 약 3만 6천 원대로 확인되지요.\"",
    "- **핵심 수치만 언급:** 최대 보장금액, 주요 환급률처럼 고객이 꼭 알아야 할 숫자만 포함합니다.",
    "  - 예: \"중입자 치료비 1억 원\", \"최대 5천만 원까지\"",
    "- **TTS 친화성 우선:** 숫자 나열보다는 \"저렴한\", \"든든한\", \"최대\", \"약\" 같은 표현으로 자연스럽게 전달합니다.",
    "- **표의 모든 행을 읽지 않음:** 표가 있어도 전체를 나열하지 말고, 대표적인 값 1~2개만 언급합니다.",
    "",
    "---",
    "",
    "## 🔥 출력 규칙 (매우 중요!)",
    "### 필수 출력 포맷",
    "1. 첫 줄에는 제목을 **굵게 표기**하세요.",
    "   - 예: **무배당 퍼스트케어 암보험 – 핵심 보장 내용**",
    "   - `제목:` 같은 레이블이나 `#`, `-` 기호를 붙이지 마세요.",
    "2. 빈 줄 하나를 둔 후, 세 번째 줄부터 본문을 자연스러운 문장으로 작성하세요.",
    "   - **본문에서는 절대 마크다운을 사용하지 마세요!**",
    "   - 마크다운 불릿(`-`, `*`), 번호(`1.`, `2.`), 코드 블록(` ``` `), 굵게(`**`) 등을 사용하지 마세요.",
    "   - 오직 순수한 텍스트와 문장부호(. , ! ?)만 사용하세요.",
    "   - 문단이 나뉠 때만 줄바꿈을 사용하세요.",
    "3. 최종 출력은 \"제목(굵게) + 빈 줄 + 본문(순수 텍스트)\"만 포함해야 합니다.",
    "   - 추가 요약, 주의 문구, 본문 내 마크다운 서식을 절대 넣지 마세요.",
    "4. SSML 태그(`<break time=\"1s\">` 등)도 절대 사용하지 마세요.",
    "",
    "**출력 예시:**",
    "```",
    "**무배당 퍼스트케어 암보험 – 든든한 암 보장**",
    "",
    "안녕하세요 고객님, 오늘은 한화생명의 무배당 퍼스트케어 암보험에 대해 말씀드릴게요. 이 상품은 암 진단 시 최대 1억 원까지 보장받으실 수 있으며, 일반암은 물론 고액암까지 든든하게 대비하실 수 있습니다.",
    "",
    "특히 조기에 발견되는 소액암도 1천만 원을 보장하고, 암 수술비와 항암 치료비도 함께 지원되어 치료에만 집중하실 수 있도록 도와드립니다.",
    "```",
    "",
    "---",
    "",
    "## ▶️ 생성 지시문",
    "첨부한 **그림 파일의 텍스트와 구성 요소를 상→하, 좌→우로 읽어가며**,",
    "사실을 그대로 반영한 **친근한 상담형 TTS 화법**을 Top-Down 본문 스크립트로 작성해 주세요.",
    "",
    "**반드시 준수할 사항:**",
    "1. 이미지의 모든 텍스트(특히 의료/전문 용어)를 정확하게 읽고 오타 없이 작성",
    "2. 핵심 숫자(보장금액, 대표 보험료)만 언급하고, 표의 모든 행은 생략",
    "3. 상품명, 특약명, 전문 용어는 원문 그대로 사용",
    "4. SSML 태그(break time 등)는 절대 생성하지 않음",
    "5. 주요 섹션은 '먼저', '다음은', '마지막으로' 같은 연결어로 구분",
    "",
    "**스타일 가이드:**",
    "- 어미는 '-이에요/-예요'와 '-습니다/-입니다', '~하지요'를 자연스럽게 섞을 것",
    "- 환급률은 '10년 후', '20년 후'만 언급할 것 (15년 제외)",
    "- 짧고 명료한 문장으로, 한 문장에 하나의 정보만 전달",
  ];

  if (!rawText) {
    return sections.join("\n");
  }

  return sections
    .concat([
      "---",
      "## 📄 참고 텍스트",
      "\"\"\"",
      trimmedText,
      "\"\"\""
    ])
    .join("\n");
}
